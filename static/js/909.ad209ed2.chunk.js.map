{"version":3,"file":"static/js/909.ad209ed2.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/Contacts/Contacts.module.css","pages/Contacts/Contacts.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectFilter = state => state.contacts.filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"formContainer\":\"ContactForm_formContainer__TWEE2\",\"form\":\"ContactForm_form__dhl+T\",\"inputWrapper\":\"ContactForm_inputWrapper__9zhfJ\",\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\",\"submitButtonWrapper\":\"ContactForm_submitButtonWrapper__lLWJ3\",\"submitButton\":\"ContactForm_submitButton__8wEUJ\"};","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/contacts/operations';\nimport { selectContacts } from '../../redux/contacts/selectors';\nimport css from './ContactForm.module.css';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const [formData, setFormData] = useState({ name: '', number: '' });\n\n  const inputChange = event => {\n    const { name, value } = event.currentTarget;\n    setFormData(prevForm => ({ ...prevForm, [name]: value }));\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const isDuplicate =\n      formData.name && contacts.some(contact => contact.name === formData.name);\n\n    if (isDuplicate) {\n      alert(`${formData.name} is already in contacts`);\n      reset();\n    } else {\n      dispatch(addContact(formData));\n      reset();\n    }\n  };\n\n  const reset = () => {\n    setFormData({ name: '', number: '' });\n  };\n\n  return (\n    <div className={css.formContainer}>\n      <form onSubmit={handleSubmit} className={css.form}>\n        <div className={css.inputWrapper}>\n          <label className={css.label}>Name</label>\n          <input\n            className={css.input}\n            onChange={inputChange}\n            type=\"text\"\n            name=\"name\"\n            value={formData.name}\n          />\n        </div>\n        <div className={css.inputWrapper}>\n          <label className={css.label}>Number</label>\n          <input\n            className={css.input}\n            onChange={inputChange}\n            type=\"tel\"\n            name=\"number\"\n            value={formData.number}\n          />\n        </div>\n        <div className={css.submitButtonWrapper}>\n          <button type=\"submit\" className={css.submitButton}>\n            Add contact\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"item\":\"ContactList_item__EZYHO\",\"contact\":\"ContactList_contact__0STHS\",\"name\":\"ContactList_name__UCkFW\",\"number\":\"ContactList_number__2af8f\",\"button\":\"ContactList_button__7kL4l\"};","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/contacts/operations';\nimport { selectFilter, selectContacts } from '../../redux/contacts/selectors';\nimport { createSelector } from '@reduxjs/toolkit';\nimport css from './ContactList.module.css';\n\nconst selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) =>\n    contacts.filter(\n      contact =>\n        contact.name.toLowerCase().includes(filter.toLowerCase()) ||\n        contact.number.includes(filter)\n    )\n);\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const filteredContacts = useSelector(selectVisibleContacts);\n\n  return (\n    <ul className={css.list}>\n      {filteredContacts.map(({ id, name, number }) => (\n        <li key={id} className={css.item}>\n          <div className={css.contact}>\n            <div>\n              <p className={css.name}>{name}: </p>\n            </div>\n            <div>\n              <p className={css.number}>{number}</p>\n            </div>\n            <button\n              type=\"button\"\n              onClick={() => dispatch(deleteContact(id))}\n              className={css.button}\n            >\n              Delete\n            </button>\n          </div>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"filterLabel\":\"Filter_filterLabel__+pnW-\",\"labelText\":\"Filter_labelText__vRYcr\",\"filterInput\":\"Filter_filterInput__1Cysk\"};","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateFilter } from '../../redux/contacts/contactsSlice';\nimport { selectFilter } from '../../redux/contacts/selectors';\nimport css from './Filter.module.css';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const changeFilter = event => {\n    dispatch(updateFilter(event.currentTarget.value));\n  };\n\n  return (\n    <label className={css.filterLabel}>\n      <p className={css.labelText}>Find contacts by name</p>\n      <input\n        type=\"text\"\n        value={filter}\n        onChange={changeFilter}\n        className={css.filterInput}\n      />\n    </label>\n  );\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {};","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from '../../redux/contacts/operations';\nimport { selectIsLoading, selectContacts } from '../../redux/contacts/selectors';\nimport ContactForm from '../../components/ContactForm/ContactForm';\nimport ContactList from '../../components/ContactList/ContactList';\nimport Filter from '../../components/Filter/Filter';\nimport css from '.././Contacts/Contacts.module.css';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <div className={css.div}>\n      {isLoading && <p>Request in progress...</p>}\n      <h1 className={css.title}>Phonebook</h1>\n      <ContactForm />\n      <h2 className={css.title}>Contacts</h2>\n      <Filter />\n      {contacts.length > 0 && <ContactList />}\n    </div>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectFilter","filter","dispatch","useDispatch","useSelector","_useState","useState","name","number","_useState2","_slicedToArray","formData","setFormData","inputChange","event","_event$currentTarget","currentTarget","value","prevForm","_objectSpread","_defineProperty","reset","_jsx","className","css","children","_jsxs","onSubmit","preventDefault","some","contact","alert","concat","addContact","onChange","type","selectVisibleContacts","createSelector","toLowerCase","includes","filteredContacts","map","_ref","id","onClick","deleteContact","updateFilter","Contacts","useEffect","fetchContacts","ContactForm","Filter","length","ContactList"],"sourceRoot":""}